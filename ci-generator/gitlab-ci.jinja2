test-ci-generator:
  stage: test
  image: python:3.7-alpine
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - ci-generator/venv/
  before_script:
    - cd ci-generator
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
  script:
    - coverage run -m unittest tests/test*.py
    - coverage report
    - coverage html
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    paths:
      - ci-generator/htmlcov

variables:
  # https://about.gitlab.com/2019/07/31/docker-in-docker-with-docker-19-dot-03/
  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

image: docker:19.03.2

services:
  - docker:19.03.2-dind

stages:
  - test
  - prepare
  - build

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

.build: &build
  stage : build
  script:
    - ci/build.sh
  retry: 2

{%- if not versions.items() %}

nothing_to_build:
  stage: build
  script:
    echo 'All versions are already built, skipping'
{% else %}
{% for version_key, version in versions.items() -%}
{%- if not version.skip_prepare_stage %}
# prepare image {{version_key}}
prepare_{{version.underscore}}:
  stage: prepare
  variables:
    VERSION: {{version.version}}
    BUILD: {{version.build}}
    DOWNLOAD_URL: {{version.download_url}}
    {%- if version.sha1 %}
    SHA1: {{version.sha1}}
    {%- endif %}
    TAG: {{version_key}}
    # https://about.gitlab.com/2019/07/31/docker-in-docker-with-docker-19-dot-03/
    # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - ci/prepare.sh
  artifacts:
    paths:
      - licence_request.alf
  retry: 2

{%- endif %}
{% if not version.legacy %}
{% for platform_key, platform in platforms.items() %}
{%- if not version.build_only_these_platforms or platform_key in version.build_only_these_platforms %}
# platform specific for {{version_key}}: {{platform_key}}
unity_{{version.underscore}}-{{platform_key}}:
  <<: *build
  variables:
    DOCKERFILE_NAME: {{version.platforms[platform_key].dockerfile_name}}
    VERSION: {{version.version}}
    BUILD: {{version.build}}
    TAG: {{version_key}}-{{platform_key}}
    COMPONENTS: {{version.platforms[platform_key].components}}
    DOWNLOAD_URL: {{version.download_url}}
    {%- if version.base_image %}
    BASE_IMAGE: {{version.base_image}}
    {%-endif %}
    {%- if version.sha1 %}
    SHA1: {{version.sha1}}
    {%- endif %}
    {%- if version.release_notes %}
    RELEASE_NOTES: {{version.release_notes}}
    {%- endif %}
    {%- if version.release_url %}
    RELEASE_URL: {{version.release_url}}
    {%- endif %}
    {%- if platform_key == 'android' %}
    {%- if version.android_sdk_version %}
    ANDROID_SDK_VERSION: {{version.android_sdk_version}}
    {%- endif %}
    {%- if version.android_jdk_url %}
    ANDROID_JDK: {{version.android_jdk_url}}
    {%- endif %}
    {%- if version.android_ndk_url %}
    ANDROID_NDK: {{version.android_ndk_url}}
    {%- endif %}
    {%- if version.android_sdk_buildtools_url %}
    ANDROID_SDK_BUILDTOOLS: {{version.android_sdk_buildtools_url}}
    {%- endif %}
    {%- if version.android_sdk_platform_url %}
    ANDROID_SDK_PLATFORM: {{version.android_sdk_platform_url}}
    {%- endif %}
    {%- if version.android_sdk_platformtools_url %}
    ANDROID_SDK_PLATFORMTOOLS: {{version.android_sdk_platformtools_url}}
    {%- endif %}
    {%- if version.android_sdk_sdktools_url %}
    ANDROID_SDK_SDKTOOLS: {{version.android_sdk_sdktools_url}}
    {%- endif %}
    {%- endif %}
    # https://about.gitlab.com/2019/07/31/docker-in-docker-with-docker-19-dot-03/
    # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"

{%- endif %}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
